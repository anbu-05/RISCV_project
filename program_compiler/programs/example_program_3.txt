word aligned encoding:
jump and branch instructions are encoded as x2. i.e., if you wanna jump to location 40, type 20. if you wanna offset by 32 locations, type 16

lui function loads the imm value to the first 20 bits (i.e., it left shifts by 12).

0:   addi x1, x0, 10       # x1 ← 10
4:   addi x2, x1, 5        # x2 ← x1 + 5 = 15 (immediate data hazard)
8:   add  x3, x1, x2       # x3 ← x1 + x2 = 25 (register-register hazard)
12:  sub  x4, x3, x1       # x4 ← x3 - x1 = 15 (another hazard)
16:  sll  x5, x4, x1       # x5 ← x4 << x1 = 15 << 10 = 15360
20:  srl  x6, x5, x1       # x6 ← x5 >> x1 = 15360 >> 10 = 15
24:  beq  x6, x4, 6        # if x6 == x4 (should be true), jump to 32
28:  addi x31, x0, 99      # ERROR: should not reach here
36:  add  x31, x6, x4      # x31 ← 15 + 15 = 30 (success indicator)